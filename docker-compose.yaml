services:
  mediator-service:
    container_name: mediator-service
    env_file:
      - .env
    build:
      context: .
      dockerfile: /deploy/mediator-service.Dockerfile
    ports:
      - "8080:${SERVER_PORT}"
    networks:
      - app-network

  security-service:
    container_name: security-service
    env_file:
      - .env
    build:
      context: .
      dockerfile: /deploy/security-service.Dockerfile
    ports:
      - "8081:${SERVER_PORT}"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-security:${SECURITY_SERVICE_POSTGRES_PORT}/${SECURITY_SERVICE_POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${SECURITY_SERVICE_POSTGRES_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SECURITY_SERVICE_POSTGRES_PASSWORD}
      SPRING_JWT_SECRET: ${JWT_SECRET}
      SPRING_JWT_ACCESS_EXPIRATION: ${JWT_ACCESS_EXPIRATION}
      SPRING_JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}
    depends_on:
      - postgres-security
    networks:
      - app-network

  postgres-security:
    container_name: postgres-security
    image: postgres:17.4
    environment:
      POSTGRES_DB: ${SECURITY_POSTGRES_DB}
      POSTGRES_USER: ${SECURITY_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${SECURITY_POSTGRES_PASSWORD}
    ports:
      - "${SECURITY_POSTGRES_PORT}:5432"
    volumes:
      - postgres-security-data:/var/lib/postgresql/data
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-security-data:
